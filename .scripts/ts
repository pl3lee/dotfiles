#!/usr/bin/env bash
switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

create_session() {
  local sess=$1
  local dir=$2

  # 1) create the session (detached) with a first window named "nvim"
  tmux new-session -d -s "$sess" -c "$dir" -n nvim

  # 2) create a second window named "term" in that same session
  tmux new-window -t "$sess" -c "$dir" -n term

  # 3) go back to window 1 
  tmux select-window -t "$sess:1"

  # 4) hydrate if you have a sessionizer
  hydrate "$sess" "$dir"
}


if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(find "$HOME" -mindepth 1 -maxdepth 2 -type d -path "$HOME/.cache" -prune -o -type d -print 2>/dev/null | fzf --height=40% --layout=reverse --prompt="Pick dir> ")
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    create_session "$selected_name" "$selected"
fi

if ! has_session $selected_name; then
    create_session "$selected_name" "$selected"
fi

switch_to $selected_name
